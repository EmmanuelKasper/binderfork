{{- if ne .Values.containerBuilderPod "disabled" -}}
{{- $builder := (index .Values .Values.containerBuilderPod) }}
{{- $daemonset := $builder.daemonset }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-{{ .Values.containerBuilderPod }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name:  {{ .Release.Name }}-{{ .Values.containerBuilderPod }}
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-{{ .Values.containerBuilderPod }}
        app: binder
        component: image-builder
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      {{- with include "jupyterhub.imagePullSecrets" (dict "root" . "image" $builder.daemonset.image) }}
      imagePullSecrets: {{ . }}
      {{- end }}
      tolerations:
      - effect: NoSchedule
        key: hub.jupyter.org/dedicated
        operator: Equal
        value: user
      - effect: NoSchedule
        key: hub.jupyter.org_dedicated
        operator: Equal
        value: user
      nodeSelector: {{ .Values.config.BinderHub.build_node_selector | default dict | toJson }}

      {{- with $builder.initContainers }}
      initContainers:
        {{- . | toYaml | nindent 8 }}
      {{- end }}

      containers:
        - name: {{ .Values.containerBuilderPod }}
          image: {{ $daemonset.image.name }}:{{ $daemonset.image.tag }}
          {{- with $daemonset.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          {{- with $daemonset.resources }}
          resources:
            {{- $daemonset.resources | toYaml | nindent 12 }}
          {{- end }}
          {{- if eq .Values.containerBuilderPod "dind" }}
          args:
            - dockerd
            - --storage-driver={{ .Values.dind.storageDriver }}
            - -H unix://{{ .Values.dind.hostSocketDir }}/docker.sock
            {{- with .Values.dind.daemonset.extraArgs }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
          - name: dockerlib-dind
            mountPath: /var/lib/docker
          - name: rundind
            mountPath: {{ $builder.hostSocketDir }}
          {{- end }}
          {{- if eq .Values.containerBuilderPod "pink" }}
          args:
            - podman
            - system
            - service
            - --time=0
            - unix:///var/run/pink/docker.sock
          securityContext:
            privileged: true
            runAsUser: 1000  # podman default user id
          volumeMounts:
          - mountPath: /home/podman/.local/share/containers/storage/
            name: podman-containers
          - mountPath: /var/run/pink/
            name: podman-socket
          {{- end }}

          {{- with $daemonset.extraVolumeMounts }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}

          {{- with $daemonset.lifecycle }}
          lifecycle:
            {{- . | toYaml | nindent 12 }}
          {{- end }}

      volumes:
      {{- if eq .Values.containerBuilderPod "dind" }}
        - name: dockerlib-dind
          hostPath:
            path: {{ .Values.dind.hostLibDir }}
            type: DirectoryOrCreate
        - name: rundind
          hostPath:
            path: {{ .Values.dind.hostSocketDir }}
            type: DirectoryOrCreate
        {{- with .Values.dind.daemonset.extraVolumes }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if eq .Values.containerBuilderPod "pink" }}
        - name: podman-containers
          hostPath:
            path: {{ .Values.pink.hostStorageDir }}
            type: DirectoryOrCreate
        - name: podman-socket
          hostPath:
            path: {{ .Values.pink.hostSocketDir }}
            type: DirectoryOrCreate
        {{- with .Values.pink.daemonset.extraVolumes }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
      {{- end }}

      terminationGracePeriodSeconds: 30
{{- end }}
